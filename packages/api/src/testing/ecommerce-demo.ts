import {
	BaseModel,
	CollectionDef,
	CollectionMetadata,
	CollectionMetadataModel,
	FieldMetadata,
	FieldMetadataModel,
	ModelType,
	RelationMetadata,
	RelationMetadataModel,
	defineCollection,
} from "@zmaj-js/common"
import { SequelizeRepoManager, SequelizeService } from "@zmaj-js/orm"
import { DataTypes, QueryInterface } from "sequelize"

export async function eCommerceSchema(qi: QueryInterface, transaction: any): Promise<void> {
	await qi.createTable(
		"categories",
		{
			id: { primaryKey: true, type: DataTypes.UUID },
			name: { type: DataTypes.STRING(255), allowNull: false },
		},
		{ transaction },
	)

	await qi.createTable(
		"tags",
		{
			id: { primaryKey: true, type: DataTypes.UUID },
			name: { type: DataTypes.STRING(255), allowNull: false },
		},
		{ transaction },
	)

	await qi.createTable(
		"products",
		{
			id: { primaryKey: true, type: DataTypes.UUID },
			name: { type: DataTypes.STRING(255), allowNull: false },
			price: { type: DataTypes.INTEGER, allowNull: false },
			category_id: { type: DataTypes.UUID },
			description: { type: DataTypes.TEXT },
			file_id: { type: DataTypes.UUID },
		},
		{ transaction },
	)
	await qi.addConstraint("products", {
		type: "foreign key",
		fields: ["category_id"],
		references: { table: "categories", field: "id" },
		onDelete: "SET NULL",
		onUpdate: "NO ACTION",
		name: "products_category_id_foreign",
		transaction,
	})
	await qi.addConstraint("products", {
		type: "foreign key",
		fields: ["file_id"],
		references: { table: "zmaj_files", field: "id" },
		onDelete: "SET NULL",
		onUpdate: "NO ACTION",
		name: "products_file_id_foreign",
		transaction,
	})

	await qi.createTable(
		"reviews",
		{
			id: { primaryKey: true, type: DataTypes.UUID },
			product_id: { type: DataTypes.UUID },
			user_id: { type: DataTypes.UUID },
			review: { type: DataTypes.TEXT, allowNull: false },
		},
		{ transaction },
	)
	await qi.addConstraint("reviews", {
		type: "foreign key",
		fields: ["product_id"],
		references: { table: "products", field: "id" },
		onDelete: "SET NULL",
		onUpdate: "NO ACTION",
		name: "reviews_product_id_foreign",
		transaction,
	})
	await qi.addConstraint("reviews", {
		type: "foreign key",
		fields: ["user_id"],
		references: { table: "zmaj_users", field: "id" },
		onDelete: "SET NULL",
		onUpdate: "NO ACTION",
		name: "reviews_user_id_foreign",
		transaction,
	})

	await qi.createTable(
		"orders",
		{
			id: { primaryKey: true, type: DataTypes.UUID },
			user_id: { type: DataTypes.UUID },
			status: { type: DataTypes.STRING, defaultValue: "pending" },
			discount: { type: DataTypes.INTEGER, defaultValue: 0 },
			total_price: { type: DataTypes.INTEGER, allowNull: false },
		},
		{ transaction },
	)
	await qi.addConstraint("orders", {
		type: "foreign key",
		fields: ["user_id"],
		references: { table: "zmaj_users", field: "id" },
		onDelete: "SET NULL",
		onUpdate: "NO ACTION",
		name: "orders_user_id_foreign",
		transaction,
	})

	await qi.createTable(
		"products_tags",
		{
			id: {
				primaryKey: true,
				type: DataTypes.INTEGER,
				autoIncrement: true,
				autoIncrementIdentity: true,
			},
			tag_id: { type: DataTypes.UUID },
			product_id: { type: DataTypes.UUID },
		},
		{
			transaction,
			uniqueKeys: {
				products_tags_composite_unique: { fields: ["tag_id", "product_id"] },
			},
		},
	)
	await qi.addConstraint("products_tags", {
		type: "foreign key",
		fields: ["product_id"],
		references: { table: "products", field: "id" },
		onDelete: "SET NULL",
		onUpdate: "NO ACTION",
		name: "products_tags_product_id_foreign",
		transaction,
	})
	await qi.addConstraint("products_tags", {
		type: "foreign key",
		fields: ["tag_id"],
		references: { table: "tags", field: "id" },
		onDelete: "SET NULL",
		onUpdate: "NO ACTION",
		name: "products_tags_tag_id_foreign",
		transaction,
	})

	await qi.createTable(
		"order_products",
		{
			id: { primaryKey: true, type: DataTypes.UUID },
			order_id: { type: DataTypes.UUID },
			product_id: { type: DataTypes.UUID },
			amount: { type: DataTypes.INTEGER, allowNull: false },
			total_price: { type: DataTypes.INTEGER, allowNull: false },
		},
		{ transaction },
	)

	await qi.addConstraint("order_products", {
		type: "foreign key",
		fields: ["order_id"],
		references: { table: "orders", field: "id" },
		onDelete: "SET NULL",
		onUpdate: "NO ACTION",
		name: "order_products_order_id_foreign",
		transaction,
	})
	await qi.addConstraint("order_products", {
		type: "foreign key",
		fields: ["product_id"],
		references: { table: "products", field: "id" },
		onDelete: "SET NULL",
		onUpdate: "NO ACTION",
		name: "order_products_product_id_foreign",
		transaction,
	})
}

export function eCommerceInfra(): {
	fields: FieldMetadata[]
	relations: RelationMetadata[]
	collections: CollectionMetadata[]
} {
	const collections: CollectionMetadata[] = [
		{
			id: "5cd1525a-af96-4da9-819f-baefbbb64b7b",
			createdAt: new Date("2023-03-07T11:46:12.310Z"),
			tableName: "products",
			collectionName: "products",
			disabled: false,
			label: "Products",
			hidden: false,
			displayTemplate: "{name}",
			layoutConfig: {},
		},
		{
			id: "178223fb-b72e-4dc4-97e3-37cdbc26f16b",
			createdAt: new Date("2023-03-07T11:48:21.790Z"),
			tableName: "categories",
			collectionName: "categories",
			disabled: false,
			label: "Categories",
			hidden: false,
			displayTemplate: "{name}",
			layoutConfig: {},
		},
		{
			id: "8add2689-85df-4c8b-a329-5bea3a319eaa",
			createdAt: new Date("2023-03-07T11:51:11.119Z"),
			tableName: "orders",
			collectionName: "orders",
			disabled: false,
			label: null,
			hidden: false,
			displayTemplate: null,
			layoutConfig: {},
		},
		{
			id: "f901f771-3792-4333-8894-f6240ef3a216",
			createdAt: new Date("2023-03-07T12:36:54.249Z"),
			tableName: "order_products",
			collectionName: "orderProducts",
			disabled: false,
			label: null,
			hidden: false,
			displayTemplate: null,
			layoutConfig: {},
		},
		{
			id: "507455da-1001-42a6-a569-c6b4e02f00a9",
			createdAt: new Date("2023-03-07T12:07:27.629Z"),
			tableName: "reviews",
			collectionName: "reviews",
			disabled: false,
			label: null,
			hidden: false,
			displayTemplate: "{review|truncate}",
			layoutConfig: {},
		},
		{
			id: "e101fced-e14c-4ed9-83da-669acbfa6f1b",
			createdAt: new Date("2023-03-07T15:36:19.842Z"),
			tableName: "products_tags",
			collectionName: "productsTags",
			disabled: false,
			label: null,
			hidden: true,
			displayTemplate: null,
			layoutConfig: {
				list: {
					size: "medium",
					perPage: { default: 10, options: [10, 20, 50] },
					hideDelete: false,
					layoutType: "table",
					quickFilter: "$q",
					disableFilter: false,
					hidePagination: false,
					permanentFilter: {},
					disableMultiSelect: false,
				},
				show: { layoutType: "simple", fieldsLayout: { type: "default" } },
				input: {
					edit: { layoutType: "simple", fieldsLayout: { type: "default" } },
					create: { layoutType: "simple", fieldsLayout: { type: "default" } },
				},
				hideDeleteButton: false,
				hideChangesButton: false,
				hideDisplayAsJsonButton: false,
			},
		},
		{
			id: "6adbbb90-2070-4108-b086-55b7361490fe",
			createdAt: new Date("2023-03-07T11:50:42.111Z"),
			tableName: "tags",
			collectionName: "tags",
			disabled: false,
			label: "Tags",
			hidden: false,
			displayTemplate: "{name}",
			layoutConfig: {},
		},
	]

	const fields: FieldMetadata[] = [
		{
			id: "dbc695e9-59cc-4f8c-b432-b9fc5ffa91f9",
			createdAt: new Date("2023-03-07T11:46:12.310Z"),
			columnName: "id",
			fieldName: "id",
			tableName: "products",
			canCreate: true,
			canUpdate: true,
			canRead: true,
			sortable: true,
			label: null,
			componentName: null,
			description: null,
			fieldConfig: {},
			isUpdatedAt: false,
			isCreatedAt: false,
			displayTemplate: null,
		},
		{
			id: "ac54e5a1-fa53-451f-9d44-a6d117a8068b",
			createdAt: new Date("2023-03-07T11:46:35.161Z"),
			columnName: "name",
			fieldName: "name",
			tableName: "products",
			canCreate: true,
			canUpdate: true,
			canRead: true,
			sortable: true,
			label: "Name",
			componentName: "short-text",
			description: "Product name",
			fieldConfig: {
				width: 12,
				editHidden: false,
				listHidden: false,
				showHidden: false,
				createHidden: false,
			},
			isUpdatedAt: false,
			isCreatedAt: false,
			displayTemplate: null,
		},
		{
			id: "def525d7-5a98-4e72-aee0-8533681acddb",
			createdAt: new Date("2023-03-07T11:48:00.044Z"),
			columnName: "price",
			fieldName: "price",
			tableName: "products",
			canCreate: true,
			canUpdate: true,
			canRead: true,
			sortable: true,
			label: "Price (cents)",
			componentName: "int",
			description: null,
			fieldConfig: {
				width: 12,
				editHidden: false,
				listHidden: false,
				showHidden: false,
				createHidden: false,
			},
			isUpdatedAt: false,
			isCreatedAt: false,
			displayTemplate: null,
		},
		{
			id: "f7234616-4680-4eaa-b363-e6e5f31e0026",
			createdAt: new Date("2023-03-07T11:48:21.790Z"),
			columnName: "id",
			fieldName: "id",
			tableName: "categories",
			canCreate: true,
			canUpdate: true,
			canRead: true,
			sortable: true,
			label: null,
			componentName: null,
			description: null,
			fieldConfig: {},
			isUpdatedAt: false,
			isCreatedAt: false,
			displayTemplate: null,
		},
		{
			id: "25237894-ee8e-4962-8f1e-5a6e67825b80",
			createdAt: new Date("2023-03-07T11:48:48.168Z"),
			columnName: "name",
			fieldName: "name",
			tableName: "categories",
			canCreate: true,
			canUpdate: true,
			canRead: true,
			sortable: true,
			label: "Name",
			componentName: "short-text",
			description: "Category Name",
			fieldConfig: {
				width: 12,
				editHidden: false,
				listHidden: false,
				showHidden: false,
				createHidden: false,
			},
			isUpdatedAt: false,
			isCreatedAt: false,
			displayTemplate: null,
		},
		{
			id: "cbe88953-c0e4-488e-881c-4a4e65147d2d",
			createdAt: new Date("2023-03-07T11:50:27.799Z"),
			columnName: "category_id",
			fieldName: "categoryId",
			tableName: "products",
			canCreate: true,
			canUpdate: true,
			canRead: true,
			sortable: true,
			label: null,
			componentName: null,
			description: null,
			fieldConfig: {},
			isUpdatedAt: false,
			isCreatedAt: false,
			displayTemplate: null,
		},
		{
			id: "1d2973b6-190f-4b55-beb2-b849865d372c",
			createdAt: new Date("2023-03-07T11:50:42.111Z"),
			columnName: "id",
			fieldName: "id",
			tableName: "tags",
			canCreate: true,
			canUpdate: true,
			canRead: true,
			sortable: true,
			label: null,
			componentName: null,
			description: null,
			fieldConfig: {},
			isUpdatedAt: false,
			isCreatedAt: false,
			displayTemplate: null,
		},
		{
			id: "8a61d44b-70c6-4c02-9bc3-73da79cb5f8d",
			createdAt: new Date("2023-03-07T11:50:54.379Z"),
			columnName: "name",
			fieldName: "name",
			tableName: "tags",
			canCreate: true,
			canUpdate: true,
			canRead: true,
			sortable: true,
			label: "Name",
			componentName: "short-text",
			description: null,
			fieldConfig: {
				width: 12,
				editHidden: false,
				listHidden: false,
				showHidden: false,
				createHidden: false,
			},
			isUpdatedAt: false,
			isCreatedAt: false,
			displayTemplate: null,
		},
		{
			id: "0a9bcdcf-70b7-44b1-a19c-20708240ee7d",
			createdAt: new Date("2023-03-07T11:51:11.119Z"),
			columnName: "id",
			fieldName: "id",
			tableName: "orders",
			canCreate: true,
			canUpdate: true,
			canRead: true,
			sortable: true,
			label: null,
			componentName: null,
			description: null,
			fieldConfig: {},
			isUpdatedAt: false,
			isCreatedAt: false,
			displayTemplate: null,
		},
		{
			id: "820fda14-b652-4546-9fbb-46b1d8a854ef",
			createdAt: new Date("2023-03-07T11:51:34.989Z"),
			columnName: "user_id",
			fieldName: "userId",
			tableName: "orders",
			canCreate: true,
			canUpdate: true,
			canRead: true,
			sortable: true,
			label: null,
			componentName: null,
			description: null,
			fieldConfig: {},
			isUpdatedAt: false,
			isCreatedAt: false,
			displayTemplate: null,
		},
		{
			id: "1509f493-f60e-4a57-90ff-7baa5da00d8e",
			createdAt: new Date("2023-03-07T12:06:12.913Z"),
			columnName: "description",
			fieldName: "description",
			tableName: "products",
			canCreate: true,
			canUpdate: true,
			canRead: true,
			sortable: true,
			label: "Description",
			componentName: "markdown",
			description: null,
			fieldConfig: {
				width: 12,
				editHidden: false,
				listHidden: false,
				showHidden: false,
				createHidden: false,
			},
			isUpdatedAt: false,
			isCreatedAt: false,
			displayTemplate: null,
		},
		{
			id: "d422b12c-149e-4356-8337-7cafa6b7c062",
			createdAt: new Date("2023-03-07T12:07:27.629Z"),
			columnName: "id",
			fieldName: "id",
			tableName: "reviews",
			canCreate: true,
			canUpdate: true,
			canRead: true,
			sortable: true,
			label: null,
			componentName: null,
			description: null,
			fieldConfig: {},
			isUpdatedAt: false,
			isCreatedAt: false,
			displayTemplate: null,
		},
		{
			id: "d1d7f108-49aa-41ee-afa4-deff7deca3d9",
			createdAt: new Date("2023-03-07T12:07:39.553Z"),
			columnName: "product_id",
			fieldName: "productId",
			tableName: "reviews",
			canCreate: true,
			canUpdate: true,
			canRead: true,
			sortable: true,
			label: null,
			componentName: null,
			description: null,
			fieldConfig: {},
			isUpdatedAt: false,
			isCreatedAt: false,
			displayTemplate: null,
		},
		{
			id: "6a5fdec0-b0df-4208-a39b-51f66ce2e5f5",
			createdAt: new Date("2023-03-07T12:08:15.991Z"),
			columnName: "user_id",
			fieldName: "userId",
			tableName: "reviews",
			canCreate: true,
			canUpdate: true,
			canRead: true,
			sortable: true,
			label: null,
			componentName: null,
			description: null,
			fieldConfig: {},
			isUpdatedAt: false,
			isCreatedAt: false,
			displayTemplate: null,
		},
		{
			id: "f4064042-3f57-426a-847e-71239d4746b2",
			createdAt: new Date("2023-03-07T12:09:30.548Z"),
			fieldName: "review",
			columnName: "review",
			tableName: "reviews",
			canCreate: true,
			canUpdate: true,
			canRead: true,
			sortable: true,
			label: "Review",
			componentName: "rich-text",
			description: null,
			fieldConfig: {
				width: 12,
				editHidden: false,
				listHidden: false,
				showHidden: false,
				createHidden: false,
			},
			isUpdatedAt: false,
			isCreatedAt: false,
			displayTemplate: null,
		},
		{
			id: "0b9af5cb-bc0c-4183-b2fb-c67638097531",
			createdAt: new Date("2023-03-07T12:36:54.249Z"),
			fieldName: "id",
			columnName: "id",
			tableName: "order_products",
			canCreate: true,
			canUpdate: true,
			canRead: true,
			sortable: true,
			label: null,
			componentName: null,
			description: null,
			fieldConfig: {},
			isUpdatedAt: false,
			isCreatedAt: false,
			displayTemplate: null,
		},
		{
			id: "373d6c86-dbda-4fe3-ab71-72bd229e72c8",
			createdAt: new Date("2023-03-07T12:37:15.664Z"),
			fieldName: "orderId",
			columnName: "order_id",
			tableName: "order_products",
			canCreate: true,
			canUpdate: true,
			canRead: true,
			sortable: true,
			label: null,
			componentName: null,
			description: null,
			fieldConfig: {},
			isUpdatedAt: false,
			isCreatedAt: false,
			displayTemplate: null,
		},
		{
			id: "a8eafd5e-cb48-4192-a33b-56b61fa8677a",
			createdAt: new Date("2023-03-07T12:38:23.906Z"),
			fieldName: "productId",
			columnName: "product_id",
			tableName: "order_products",
			canCreate: true,
			canUpdate: true,
			canRead: true,
			sortable: true,
			label: null,
			componentName: null,
			description: null,
			fieldConfig: {},
			isUpdatedAt: false,
			isCreatedAt: false,
			displayTemplate: null,
		},
		{
			id: "992d1a16-3ae2-4a74-921f-aa250e134a36",
			createdAt: new Date("2023-03-07T12:38:51.456Z"),
			fieldName: "amount",
			columnName: "amount",
			tableName: "order_products",
			canCreate: true,
			canUpdate: true,
			canRead: true,
			sortable: true,
			label: "Amount",
			componentName: "int",
			description: null,
			fieldConfig: {
				width: 12,
				editHidden: false,
				listHidden: false,
				showHidden: false,
				createHidden: false,
			},
			isUpdatedAt: false,
			isCreatedAt: false,
			displayTemplate: null,
		},
		{
			id: "9e801f48-1747-4721-87ef-e9cd4a51622a",
			createdAt: new Date("2023-03-07T12:39:17.439Z"),
			fieldName: "totalPice",
			columnName: "total_price",
			tableName: "order_products",
			canCreate: true,
			canUpdate: true,
			canRead: true,
			sortable: true,
			label: "Total Price",
			componentName: "int",
			description: null,
			fieldConfig: {
				width: 12,
				editHidden: false,
				listHidden: false,
				showHidden: false,
				createHidden: false,
			},
			isUpdatedAt: false,
			isCreatedAt: false,
			displayTemplate: null,
		},
		{
			id: "2606b5bd-0cae-44ec-a61a-9f79f25ee4ed",
			createdAt: new Date("2023-03-07T13:52:31.387Z"),
			fieldName: "status",
			columnName: "status",
			tableName: "orders",
			canCreate: true,
			canUpdate: true,
			canRead: true,
			sortable: true,
			label: "Status",
			componentName: "dropdown",
			description: null,
			fieldConfig: {
				width: 12,
				component: {
					dropdown: {
						choices: [
							{ label: "Pending", value: "pending" },
							{ label: "Sent", value: "sent" },
							{ label: "Delivered", value: "delivered" },
						],
					},
					"short-text": { regex: null, maxLength: null, minLength: null, regexError: null },
				},
				editHidden: false,
				listHidden: false,
				showHidden: false,
				createHidden: false,
			},
			isUpdatedAt: false,
			isCreatedAt: false,
			displayTemplate: null,
		},
		{
			id: "05629b7d-122a-4307-a50d-861a27e67510",
			createdAt: new Date("2023-03-07T15:36:19.842Z"),
			fieldName: "id",
			columnName: "id",
			tableName: "products_tags",
			canCreate: true,
			canUpdate: true,
			canRead: true,
			sortable: true,
			label: null,
			componentName: null,
			description: null,
			fieldConfig: {},
			isUpdatedAt: false,
			isCreatedAt: false,
			displayTemplate: null,
		},
		{
			id: "8b505b21-8ed2-4672-bc1e-b255121a756d",
			createdAt: new Date("2023-03-07T15:36:35.241Z"),
			fieldName: "tagId",
			columnName: "tag_id",
			tableName: "products_tags",
			canCreate: true,
			canUpdate: true,
			canRead: true,
			sortable: true,
			label: null,
			componentName: null,
			description: null,
			fieldConfig: {},
			isUpdatedAt: false,
			isCreatedAt: false,
			displayTemplate: null,
		},
		{
			id: "ba9a5cc3-e2f3-43f6-aa4d-106382d52dbe",
			createdAt: new Date("2023-03-07T15:36:47.290Z"),
			fieldName: "productId",
			columnName: "product_id",
			tableName: "products_tags",
			canCreate: true,
			canUpdate: true,
			canRead: true,
			sortable: true,
			label: null,
			componentName: null,
			description: null,
			fieldConfig: {},
			isUpdatedAt: false,
			isCreatedAt: false,
			displayTemplate: null,
		},
		{
			id: "1606a8f1-444d-4537-b02c-2470ed6b8c99",
			createdAt: new Date("2023-03-07T15:38:30.016Z"),
			fieldName: "fileId",
			columnName: "file_id",
			tableName: "products",
			canCreate: true,
			canUpdate: true,
			canRead: true,
			sortable: true,
			label: "Image ID",
			componentName: null,
			description: null,
			fieldConfig: {},
			isUpdatedAt: false,
			isCreatedAt: false,
			displayTemplate: null,
		},
		{
			id: "e29a9a63-6ff0-4654-810a-096aad0202b0",
			createdAt: new Date("2023-03-07T16:27:09.840Z"),
			fieldName: "discount",
			columnName: "discount",
			tableName: "orders",
			canCreate: true,
			canUpdate: true,
			canRead: true,
			sortable: true,
			label: "Discount",
			componentName: "int",
			description: null,
			fieldConfig: {
				width: 12,
				component: {
					"short-text": { regex: null, maxLength: null, minLength: null, regexError: null },
				},
				editHidden: false,
				listHidden: false,
				showHidden: false,
				createHidden: false,
			},
			isUpdatedAt: false,
			isCreatedAt: false,
			displayTemplate: null,
		},
		{
			id: "e74df24f-2a9b-4d13-b493-3450162c1b92",
			createdAt: new Date("2023-03-07T16:29:09.763Z"),
			fieldName: "totalPrice",
			columnName: "total_price",
			tableName: "orders",
			canCreate: true,
			canUpdate: true,
			canRead: true,
			sortable: true,
			label: "Total Price",
			componentName: "int",
			description: null,
			fieldConfig: {
				width: 12,
				component: {
					"short-text": { regex: null, maxLength: null, minLength: null, regexError: null },
				},
				editHidden: false,
				listHidden: false,
				showHidden: false,
				createHidden: false,
			},
			isUpdatedAt: false,
			isCreatedAt: false,
			displayTemplate: null,
		},
	]

	const relations: RelationMetadata[] = [
		{
			id: "c09a332c-fda3-43cf-82ef-a8c18e0c9a85",
			createdAt: new Date("2023-03-07T11:50:27.826Z"),
			tableName: "categories",
			fkName: "products_category_id_foreign",
			mtmFkName: null,
			propertyName: "products",
			template: null,
			label: "Products",
			hidden: false,
		},
		{
			id: "d3fcc87e-50f4-4f75-81c4-65c8781723e7",
			createdAt: new Date("2023-03-07T11:51:35.008Z"),
			tableName: "orders",
			fkName: "orders_user_id_foreign",
			mtmFkName: null,
			propertyName: "user",
			template: null,
			label: "User",
			hidden: false,
		},
		{
			id: "14f9b7fa-38d6-45dc-9d6b-3dd1cf0d8298",
			createdAt: new Date("2023-03-07T12:07:39.565Z"),
			tableName: "products",
			fkName: "reviews_product_id_foreign",
			mtmFkName: null,
			propertyName: "reviews",
			template: null,
			label: "Reviews",
			hidden: false,
		},
		{
			id: "f4a0a78b-c3ff-4c6f-8be7-4dc3d0c4b70f",
			createdAt: new Date("2023-03-07T12:37:15.674Z"),
			tableName: "order_products",
			fkName: "order_products_order_id_foreign",
			mtmFkName: null,
			propertyName: "order",
			template: null,
			label: "Order",
			hidden: false,
		},
		{
			id: "44b5ea85-b53c-4852-b855-0f4d26367b85",
			createdAt: new Date("2023-03-07T12:37:15.677Z"),
			tableName: "orders",
			fkName: "order_products_order_id_foreign",
			mtmFkName: null,
			propertyName: "products",
			template: null,
			label: "Products",
			hidden: false,
		},
		{
			id: "bf70da41-ae7b-484a-913f-41ddd582e25c",
			createdAt: new Date("2023-03-07T12:38:23.915Z"),
			tableName: "order_products",
			fkName: "order_products_product_id_foreign",
			mtmFkName: null,
			propertyName: "products",
			template: null,
			label: "Products",
			hidden: false,
		},
		{
			id: "1f6a7ab0-8347-46ad-b7d5-611c11cf54cf",
			createdAt: new Date("2023-03-07T11:50:27.818Z"),
			tableName: "products",
			fkName: "products_category_id_foreign",
			mtmFkName: null,
			propertyName: "category",
			template: null,
			label: "Category",
			hidden: false,
		},
		{
			id: "51154a7f-6e34-43c4-9587-ceedce3c18cd",
			createdAt: new Date("2023-03-07T12:38:23.919Z"),
			tableName: "products",
			fkName: "order_products_product_id_foreign",
			mtmFkName: null,
			propertyName: "inOrder",
			template: null,
			label: "In Order",
			hidden: false,
		},
		{
			id: "446e4121-c494-4a9d-b1cd-439e2603f827",
			createdAt: new Date("2023-03-07T12:07:39.563Z"),
			tableName: "reviews",
			fkName: "reviews_product_id_foreign",
			mtmFkName: null,
			propertyName: "product",
			template: null,
			label: "Product",
			hidden: false,
		},
		{
			id: "1f934e55-e6fc-4d72-a704-b0204714f848",
			createdAt: new Date("2023-03-07T12:08:16.000Z"),
			tableName: "reviews",
			fkName: "reviews_user_id_foreign",
			mtmFkName: null,
			propertyName: "user",
			template: null,
			label: "User",
			hidden: false,
		},
		{
			id: "8b57ddbd-44ff-4a92-8508-715958c5bbc0",
			createdAt: new Date("2023-03-07T15:36:35.250Z"),
			tableName: "products_tags",
			fkName: "products_tags_tag_id_foreign",
			mtmFkName: null,
			propertyName: "tag",
			template: null,
			label: "Tags",
			hidden: false,
		},
		{
			id: "0ada1f6a-b302-4068-8395-98de851906ef",
			createdAt: new Date("2023-03-07T15:36:47.299Z"),
			tableName: "products_tags",
			fkName: "products_tags_product_id_foreign",
			mtmFkName: null,
			propertyName: "product",
			template: null,
			label: "Products",
			hidden: false,
		},
		{
			id: "f30bff8e-a99b-4a11-a87c-3d04d671744b",
			createdAt: new Date("2023-03-07T15:38:30.029Z"),
			tableName: "products",
			fkName: "products_file_id_foreign",
			mtmFkName: null,
			propertyName: "image",
			template: null,
			label: "Image",
			hidden: false,
		},
		{
			id: "847f5c2d-ab02-4d4d-9379-6d8adcb39eba",
			createdAt: new Date("2023-03-07T15:36:35.255Z"),
			tableName: "tags",
			fkName: "products_tags_tag_id_foreign",
			mtmFkName: "products_tags_product_id_foreign",
			propertyName: "products",
			template: null,
			label: "Products",
			hidden: false,
		},
		{
			id: "ccdb6e4f-a957-4dc1-b756-de8bb4c54307",
			createdAt: new Date("2023-03-07T15:36:47.301Z"),
			tableName: "products",
			fkName: "products_tags_product_id_foreign",
			mtmFkName: "products_tags_tag_id_foreign",
			propertyName: "tags",
			template: null,
			label: "Tags",
			hidden: false,
		},
	]

	return { fields, collections, relations }
}

export async function initECommerce(sq: SequelizeService, trx: any): Promise<void> {
	await eCommerceSchema(sq.qi, trx)
	const data = eCommerceInfra()
	const rm = new SequelizeRepoManager(sq)
	const createdCols = await rm
		.getRepo(CollectionMetadataModel)
		.createMany({ data: data.collections, trx })
	console.log({ createdCols })

	const createdFields = await rm.getRepo(FieldMetadataModel).createMany({ data: data.fields, trx })
	console.log({ createdFields })
	const createdRels = await rm
		.getRepo(RelationMetadataModel)
		.createMany({ data: data.relations, trx })
	console.log({ createdRels })
}

class CategoryModel extends BaseModel {
	name = "categories"
	fields = this.buildFields((f) => ({
		id: f.uuid({ isPk: true }),
		name: f.text({}),
	}))
}

class TagModel extends BaseModel {
	name = "tags"
	fields = this.buildFields((f) => ({
		id: f.uuid({ isPk: true }),
		name: f.text({}),
	}))
}
class ProductModel extends BaseModel {
	name = "products"
	fields = this.buildFields((f) => ({
		id: f.uuid({ isPk: true }),
		name: f.text({}),
		price: f.int({}),
		categoryId: f.uuid({ columnName: "category_id" }),
		description: f.text({}),
		fileId: f.uuid({ columnName: "file_id" }),
	}))
}
class ReviewModel extends BaseModel {
	name = "reviews"
	fields = this.buildFields((f) => ({
		id: f.uuid({ isPk: true }),
		userId: f.uuid({ columnName: "user_id" }),
		productId: f.uuid({ columnName: "product_id" }),
		review: f.text({}),
	}))
}

class OrderModel extends BaseModel {
	name = "orders"
	fields = this.buildFields((f) => ({
		id: f.uuid({ isPk: true }),
		userId: f.uuid({ columnName: "user_id" }),
		status: f.text({}),
		discount: f.int({}),
		totalPrice: f.int({ columnName: "total_price" }),
	}))
}

class ProductTagModel extends BaseModel {
	name = "products_tags"
	fields = this.buildFields((f) => ({
		id: f.uuid({ isPk: true }),
		productId: f.uuid({ columnName: "product_id" }),
		tagId: f.uuid({ columnName: "tag_id" }),
	}))
}

class OrderProductTagModel extends BaseModel {
	name = "order_products"
	fields = this.buildFields((f) => ({
		id: f.uuid({ isPk: true }),
		productId: f.uuid({ columnName: "product_id" }),
		orderId: f.uuid({ columnName: "order_id" }),
		amount: f.int({}),
		totalPrice: f.int({}),
	}))
}

export const storeCollectionDefs: CollectionDef<ModelType<BaseModel>>[] = [
	defineCollection(CategoryModel, {}),
	defineCollection(TagModel, {}),
	defineCollection(ProductModel, {}),
	defineCollection(ReviewModel, {}),
	defineCollection(OrderModel, {}),
	defineCollection(ProductTagModel, {}),
	defineCollection(OrderProductTagModel, {}),
]
